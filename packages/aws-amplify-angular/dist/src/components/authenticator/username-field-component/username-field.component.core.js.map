{"version":3,"file":"username-field.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/username-field-component/username-field.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAeA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,YAAY,EACZ,MAAM,EACN,MAAM,GACP,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,QAAQ,EAAE,MAAM,WAAW,CAAC;AACrC,OAAO,EACL,kBAAkB,GAGnB,MAAM,UAAU,CAAC;AAClB,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AACpE,OAAO,EAAE,IAAI,EAAE,MAAM,sCAAsC,CAAC;AAE5D,IAAM,QAAQ,GAAG,ohBAUQ,IAAI,CAAC,YAAY,CAAC,UAAU,2zBAiB5B,IAAI,CAAC,YAAY,CAAC,aAAa,yCAIvD,CAAC;;IAWA,oCAA2C;QAAA,mBAAc,GAAd,cAAc;mCAJ3B,kBAAkB,CAAC,QAAQ;4BAClC,EAAE;oCAwBiC,IAAI,YAAY,EAAuB;QApB/F,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAChE;0BAGG,4CAAI;uBAAC,IAAS;YAChB,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,kBAAkB,CAAC;YACnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,WAAW,CAAC;;;;;0BAInC,0DAAkB;uBAAC,kBAA0B;YAC/C,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;;;;;0BAI5C,mDAAW;uBAAC,WAAmB;YACjC,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;;;;;IAMlC,6CAAQ,GAAR;QACE,IACE,MAAM;YACN,MAAM,CAAC,QAAQ;YACf,MAAM,CAAC,QAAQ,CAAC,MAAM;YACtB,IAAI,CAAC,mBAAmB,KAAK,OAAO;YACpC,IAAI,CAAC,mBAAmB,KAAK,cAAc,EAC3C;YACA,IAAM,YAAY,GAAG,IAAI,eAAe,CAAC,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACjE,IAAM,QAAQ,GAAG,YAAY,CAAC,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC;YACzE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;YAC3B,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;SAC1B;KACF;IAED,gDAAW,GAAX,eAAgB;IAEhB,gDAAW,GAAX,UAAY,QAAgB;QAC1B,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YAC7B,QAAQ,UAAA;SACT,CAAC,CAAC;KACJ;IAED,6CAAQ,GAAR,UAAS,KAAa;QACpB,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC;YAC7B,KAAK,OAAA;SACN,CAAC,CAAC;KACJ;IAED,qDAAgB,GAAhB;QACE,OAAO,CACL,QAAQ,CAAC,IAAI,CAAC,mBAA6B,CAAC,IAAI,IAAI,CAAC,mBAAmB,CACzE,CAAC;KACH;IAED,mDAAc,GAAd;QACE,OAAO,IAAI,CAAC,cAAc;aACvB,IAAI,EAAE;aACN,GAAG,CAAC,KAAG,IAAI,CAAC,gBAAgB,EAAI,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3D;IAED,wDAAmB,GAAnB,UAAoB,KAAuB;QACzC,IAAI,CAAC,oBAAoB,CAAC,IAAI,cACzB,KAAK,EACR,CAAC;KACJ;;gBA7EF,SAAS,SAAC;oBACT,QAAQ,EAAE,kCAAkC;oBAC5C,QAAQ,UAAA;iBACT;;;;gBAvCQ,cAAc,uBA6CR,MAAM,SAAC,cAAc;;;yBAIjC,KAAK;uCAML,KAAK;gCAKL,KAAK;yCAKL,MAAM;;qCA9FT;;SAqEa,0BAA0B","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  EventEmitter,\n  Inject,\n  Output,\n} from '@angular/core';\nimport { labelMap } from '../common';\nimport {\n  UsernameAttributes,\n  UsernameFieldOutput,\n  PhoneFieldOutput,\n} from '../types';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { auth } from '../../../assets/data-test-attributes';\n\nconst template = `\n<div class=\"amplify-amplify-form-row amplify-signin-username\">\n    <div *ngIf=\"this._usernameAttributes === 'email'\">\n        <label class=\"amplify-input-label\" for=\"emailField\"> {{ this.amplifyService.i18n().get('Email') }} *</label>\n        <input\n            #emailField\n            class=\"amplify-form-input\"\n            type=\"email\"\n            placeholder=\"{{ this.amplifyService.i18n().get(this.getPlaceholder()) }}\"\n            (keyup)=\"setEmail($event.target.value)\"\n            data-test=\"${auth.genericAttrs.emailInput}\"\n        />\n    </div>\n    <div *ngIf=\"this._usernameAttributes === 'phone_number'\">\n        <amplify-auth-phone-field-core\n            (phoneFieldChanged)=\"onPhoneFieldChanged($event)\"\n        ></amplify-auth-phone-field-core>\n    </div>\n    <div *ngIf=\"this._usernameAttributes !== 'email' && this._usernameAttributes !== 'phone_number'\">\n        <label class=\"amplify-input-label\" for=\"usernameField\"> {{ this.amplifyService.i18n().get(getUsernameLabel()) }} *</label>\n        <input\n            #usernameField\n            class=\"amplify-form-input\"\n            type=\"text\"\n            value=\"{{this.username}}\"\n            placeholder=\"{{ this.amplifyService.i18n().get(this.getPlaceholder()) }}\"\n            (keyup)=\"setUsername($event.target.value)\"\n            data-test=\"${auth.genericAttrs.usernameInput}\"\n        />\n    </div>\n</div>\n`;\n\n@Component({\n  selector: 'amplify-auth-username-field-core',\n  template,\n})\nexport class UsernameFieldComponentCore implements OnInit {\n  _usernameAttributes: string = UsernameAttributes.USERNAME;\n  _placeholder: string = '';\n  username: string;\n\n  constructor(@Inject(AmplifyService) public amplifyService: AmplifyService) {\n    this.onPhoneFieldChanged = this.onPhoneFieldChanged.bind(this);\n  }\n\n  @Input()\n  set data(data: any) {\n    this._usernameAttributes = data.usernameAttributes;\n    this._placeholder = data.placeholder;\n  }\n\n  @Input()\n  set usernameAttributes(usernameAttributes: string) {\n    this._usernameAttributes = usernameAttributes;\n  }\n\n  @Input()\n  set placeholder(placeholder: string) {\n    this._placeholder = placeholder;\n  }\n\n  @Output()\n  usernameFieldChanged: EventEmitter<UsernameFieldOutput> = new EventEmitter<UsernameFieldOutput>();\n\n  ngOnInit() {\n    if (\n      window &&\n      window.location &&\n      window.location.search &&\n      this._usernameAttributes !== 'email' &&\n      this._usernameAttributes !== 'phone_number'\n    ) {\n      const searchParams = new URLSearchParams(window.location.search);\n      const username = searchParams ? searchParams.get('username') : undefined;\n      this.setUsername(username);\n      this.username = username;\n    }\n  }\n\n  ngOnDestroy() {}\n\n  setUsername(username: string) {\n    this.usernameFieldChanged.emit({\n      username,\n    });\n  }\n\n  setEmail(email: string) {\n    this.usernameFieldChanged.emit({\n      email,\n    });\n  }\n\n  getUsernameLabel() {\n    return (\n      labelMap[this._usernameAttributes as string] || this._usernameAttributes\n    );\n  }\n\n  getPlaceholder() {\n    return this.amplifyService\n      .i18n()\n      .get(`${this.getUsernameLabel()}` || this._placeholder);\n  }\n\n  onPhoneFieldChanged(event: PhoneFieldOutput) {\n    this.usernameFieldChanged.emit({\n      ...event,\n    });\n  }\n}\n"]}