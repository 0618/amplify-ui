{"version":3,"file":"authenticator.component.core.js","sourceRoot":"","sources":["../../../../../src/components/authenticator/authenticator/authenticator.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAA6B,MAAM,eAAe,CAAC;AAC5E,OAAO,EAAE,cAAc,EAAa,MAAM,oBAAoB,CAAC;AAE/D,IAAM,QAAQ,GAAG,ojDAiDhB,CAAC;;IAcA,oCAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;yBAP1B;YACrB,KAAK,EAAE,SAAS;YAChB,IAAI,EAAE,IAAI;SACX;6BACoB,EAAE;mCACO,UAAU;oBA2BvB,EAAE;QAxBjB,IAAI,CAAC,SAAS,EAAE,CAAC;KAClB;IAED,6CAAQ,GAAR;QAAA,iBAkBC;QAjBC,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE;YAC/B,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;SAC1E;aAAM;YACL,IAAM,UAAU,GAAG,IAAI,CAAC,cAAc;iBACnC,IAAI,EAAE;iBACN,wBAAwB,EAAE;iBAC1B,IAAI,CAAC,UAAC,IAAI;gBACT,IAAI,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS,IAAI,IAAI,EAAE;oBAC9C,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,UAAU,EAAE,IAAI,MAAA,EAAE,CAAC,CAAC;iBAC/D;aACF,CAAC;iBACD,KAAK,CAAC,UAAC,CAAC;gBACP,IAAI,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,SAAS,EAAE;oBACtC,KAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;iBACnE;aACF,CAAC,CAAC;SACN;KACF;0BAMG,4CAAI;uBAAC,IAAS;YAChB,IAAI,IAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC;aACxC;YACD,IAAI,IAAI,CAAC,IAAI,EAAE;gBACb,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;aACvB;YAED,IAAI,CAAC,mBAAmB;gBACtB,IAAI,CAAC,kBAAkB,IAAI,IAAI,CAAC,mBAAmB,IAAI,UAAU,CAAC;;;;;0BAIlE,oDAAY;uBAAC,YAAiB;YAChC,IAAI,CAAC,aAAa,GAAG,YAAY,CAAC;;;;;0BAIhC,0DAAkB;uBAAC,kBAA0B;YAC/C,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,IAAI,UAAU,CAAC;;;;;IAG9D,8CAAS,GAAT;QAAA,iBAYC;QAXC,IAAI,CAAC,cAAc,CAAC,gBAAgB,CAAC,SAAS,CAC5C,UAAC,KAAK;YACJ,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC;SACxB,EACD;YACE,KAAI,CAAC,SAAS,GAAG;gBACf,KAAK,EAAE,QAAQ;gBACf,IAAI,EAAE,IAAI;aACX,CAAC;SACH,CACF,CAAC;KACH;IAED,+CAAU,GAAV,UAAW,IAAI;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,UAAC,IAAI,IAAK,OAAA,IAAI,KAAK,IAAI,EAAb,CAAa,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC;KAC7D;;gBA9EF,SAAS,SAAC;oBACT,QAAQ,EAAE,4BAA4B;oBACtC,QAAQ,UAAA;iBACT;;;;gBAxDQ,cAAc;;;yBAyFpB,KAAK;yBAGL,KAAK;iCAaL,KAAK;uCAKL,KAAK;;qCA9HR;;SAyEa,0BAA0B","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, ViewEncapsulation, OnInit } from '@angular/core';\nimport { AmplifyService, AuthState } from '../../../providers';\n\nconst template = `\n  <div class=\"amplify-authenticator\">\n    <amplify-auth-sign-in-core\n      *ngIf=\"!shouldHide('SignIn')\"\n      [authState]=\"authState\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-sign-in-core>\n\n    <amplify-auth-sign-up-core\n      *ngIf=\"!shouldHide('SignUp')\"\n      [authState]=\"authState\"\n      [signUpConfig]=\"_signUpConfig\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-sign-up-core>\n\n    <amplify-auth-confirm-sign-up-core\n      *ngIf=\"!shouldHide('ConfirmSignUp')\"\n      [authState]=\"authState\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-confirm-sign-up-core>\n\n    <amplify-auth-confirm-sign-in-core\n      *ngIf=\"!shouldHide('ConfirmSignIn')\"\n      [authState]=\"authState\"\n      [hide]=\"hide\"\n    ></amplify-auth-confirm-sign-in-core>\n\n    <amplify-auth-forgot-password-core\n      *ngIf=\"!shouldHide('ForgotPassword')\"\n      [authState]=\"authState\"\n      [usernameAttributes]=\"_usernameAttributes\"\n      [hide]=\"hide\"\n    ></amplify-auth-forgot-password-core>\n\n    <amplify-auth-greetings-core\n    *ngIf=\"!shouldHide('Greetings')\"\n    [authState]=\"authState\"\n    [usernameAttributes]=\"_usernameAttributes\"\n    ></amplify-auth-greetings-core>\n\n     <amplify-auth-require-new-password-core\n      *ngIf=\"!shouldHide('RequireNewPassword')\"\n      [authState]=\"authState\"\n      [hide]=\"hide\"\n    ></amplify-auth-require-new-password-core>\n  </div>\n`;\n\n@Component({\n  selector: 'amplify-authenticator-core',\n  template,\n})\nexport class AuthenticatorComponentCore implements OnInit {\n  authState: AuthState = {\n    state: 'loading',\n    user: null,\n  };\n  _signUpConfig: any = {};\n  _usernameAttributes: string = 'username';\n\n  constructor(public amplifyService: AmplifyService) {\n    this.subscribe();\n  }\n\n  ngOnInit() {\n    if (!this.amplifyService.auth()) {\n      throw new Error('Auth module not registered on AmplifyService provider');\n    } else {\n      const loadStatus = this.amplifyService\n        .auth()\n        .currentAuthenticatedUser()\n        .then((user) => {\n          if (this.authState.state === 'loading' && user) {\n            this.amplifyService.setAuthState({ state: 'signedIn', user });\n          }\n        })\n        .catch((e) => {\n          if (this.authState.state === 'loading') {\n            this.amplifyService.setAuthState({ state: 'signIn', user: null });\n          }\n        });\n    }\n  }\n\n  @Input()\n  hide: string[] = [];\n\n  @Input()\n  set data(data: any) {\n    if (data.signUpConfig) {\n      this._signUpConfig = data.signUpConfig;\n    }\n    if (data.hide) {\n      this.hide = data.hide;\n    }\n\n    this._usernameAttributes =\n      data.usernameAttributes || this._usernameAttributes || 'username';\n  }\n\n  @Input()\n  set signUpConfig(signUpConfig: any) {\n    this._signUpConfig = signUpConfig;\n  }\n\n  @Input()\n  set usernameAttributes(usernameAttributes: string) {\n    this._usernameAttributes = usernameAttributes || 'username';\n  }\n\n  subscribe() {\n    this.amplifyService.authStateChange$.subscribe(\n      (state) => {\n        this.authState = state;\n      },\n      () => {\n        this.authState = {\n          state: 'signIn',\n          user: null,\n        };\n      }\n    );\n  }\n\n  shouldHide(comp) {\n    return this.hide.filter((item) => item === comp).length > 0;\n  }\n}\n"]}