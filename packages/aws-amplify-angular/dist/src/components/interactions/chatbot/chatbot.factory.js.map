{"version":3,"file":"chatbot.factory.js","sourceRoot":"","sources":["../../../../../src/components/interactions/chatbot/chatbot.factory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,SAAS,EACT,wBAAwB,EAExB,MAAM,EACN,YAAY,GACb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,yBAAyB,EAAE,MAAM,iDAAiD,CAAC;AAC5F,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAEvD,OAAO,EAAE,qBAAqB,EAAE,MAAM,2BAA2B,CAAC;AAClE,OAAO,EAAE,oBAAoB,EAAE,MAAM,0BAA0B,CAAC;;IAwB9D,0BAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;wBAJrC,IAAI,YAAY,EAAU;KAIe;IAE1E,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,sCAAW,GAAX,eAAgB;IAEhB,wCAAa,GAAb;QAAA,iBA8BC;QA7BC,IAAM,iBAAiB,GAAG;YACxB,GAAG,EAAE,IAAI,CAAC,GAAG;YACb,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,aAAa,EAAE,IAAI,CAAC,aAAa;YACjC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,WAAW,EAAE,IAAI,CAAC,WAAW;YAC7B,YAAY,EAAE,IAAI,CAAC,YAAY;YAC/B,WAAW,EAAE,IAAI,CAAC,WAAW;SAC9B,CAAC;QAEF,IAAM,oBAAoB,GACxB,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,OAAO;YACxD,CAAC,CAAC,IAAI,cAAc,CAAC,qBAAqB,EAAE,iBAAiB,CAAC;YAC9D,CAAC,CAAC,IAAI,cAAc,CAAC,oBAAoB,EAAE,iBAAiB,CAAC,CAAC;QAElE,IAAM,gBAAgB,GACpB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACnD,oBAAoB,CAAC,SAAS,CAC/B,CAAC;QAEJ,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC7D,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEzB,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACzD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,oBAAoB,CAAC,IAAI,CAAC;QAEvE,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,CAAC;YACzC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB,CAAC,CAAC;KACJ;;gBA5DF,SAAS,SAAC;oBACT,QAAQ,EAAE,sBAAsB;oBAChC,QAAQ,EAAE,2GAIT;iBACF;;;;gBAlBC,wBAAwB;;;8BAoBvB,KAAK;wBACL,KAAK;0BACL,KAAK;kCACL,KAAK;uCACL,KAAK;gCACL,KAAK;iCACL,KAAK;gCACL,KAAK;6BACL,MAAM;kCAEN,SAAS,SAAC,yBAAyB;;2BAlDtC;;SAuCa,gBAAgB","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  ComponentFactoryResolver,\n  OnDestroy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DynamicComponentDirective } from '../../../directives/dynamic.component.directive';\nimport { ComponentMount } from '../../component.mount';\nimport { ChatBotClass } from './chatbot.class';\nimport { ChatbotComponentIonic } from './chatbot.component.ionic';\nimport { ChatbotComponentCore } from './chatbot.component.core';\n\n@Component({\n  selector: 'amplify-interactions',\n  template: `\n    <div class=\"amplify-component\">\n      <ng-template component-host></ng-template>\n    </div>\n  `,\n})\nexport class ChatBotComponent implements OnInit, OnDestroy {\n  @Input() framework: string;\n  @Input() bot: string;\n  @Input() title: string;\n  @Input() clearComplete: boolean;\n  @Input() conversationModeOn: boolean;\n  @Input() voiceConfig: any;\n  @Input() voiceEnabled: boolean;\n  @Input() textEnabled: boolean;\n  @Output()\n  complete: EventEmitter<string> = new EventEmitter<string>();\n  @ViewChild(DynamicComponentDirective)\n  componentHost: DynamicComponentDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  ngOnDestroy() {}\n\n  loadComponent() {\n    const interactionParams = {\n      bot: this.bot,\n      title: this.title,\n      clearComplete: this.clearComplete,\n      conversationModeOn: this.conversationModeOn,\n      voiceConfig: this.voiceConfig,\n      voiceEnabled: this.voiceEnabled,\n      textEnabled: this.textEnabled,\n    };\n\n    const interactionComponent =\n      this.framework && this.framework.toLowerCase() === 'ionic'\n        ? new ComponentMount(ChatbotComponentIonic, interactionParams)\n        : new ComponentMount(ChatbotComponentCore, interactionParams);\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(\n        interactionComponent.component\n      );\n\n    const viewContainerRef = this.componentHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<ChatBotClass>componentRef.instance).data = interactionComponent.data;\n\n    componentRef.instance.complete.subscribe((e) => {\n      this.complete.emit(e);\n    });\n  }\n}\n"]}