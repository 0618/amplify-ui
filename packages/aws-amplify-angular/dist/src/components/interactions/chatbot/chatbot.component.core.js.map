{"version":3,"file":"chatbot.component.core.js","sourceRoot":"","sources":["../../../../../src/components/interactions/chatbot/chatbot.component.core.ts"],"names":[],"mappings":"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","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ChangeDetectorRef,\n  Inject,\n} from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\nimport { chatBot } from '../../../assets/data-test-attributes';\nrequire('./aws-lex-audio.js');\n\nconst template = `\n<div class=\"amplify-interactions\">\n\t<div class=\"amplify-interactions-container\">\n\t\t<div class=\"amplify-form-container\">\n\t\t\t<div class=\"amplify-form-row\">\n\t\t\t\t<div class=\"amplify-interactions-conversation\">\n\t\t\t\t\t<div *ngFor=\"let message of messages\">\n\t\t\t\t\t\t<div class=\"amplify-interactions-input\">{{message.me}}</div>\n\t\t\t\t\t\t<div class=\"amplify-interactions-input-timestamp\">{{message.meSentTime}}</div>\n\t\t\t\t\t\t<div class=\"amplify-interactions-response\">{{message.bot}}</div>\n\t\t\t\t\t\t<div class=\"amplify-interactions-response-timestamp\">{{message.botSentTime}}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div class=\"amplify-interactions-actions\">\n\t\t\t\t<input #inputValue\n\t\t\t\t\tdata-test=\"${chatBot.messageInput}\"\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclass=\"amplify-form-input\"\n\t\t\t\t\tplaceholder=\"{{currentVoiceState}}\"\n\t\t\t\t\t[value]=\"inputText\"\n\t\t\t\t\t(keyup.enter)=\"onSubmit(inputValue.value)\"\n\t\t\t\t\t(change)=\"onInputChange($event.target.value)\"\n\t\t\t\t\t[disabled]=\"inputDisabled\"\n\t\t\t\t\t*ngIf=\"textEnabled\">\n\t\t\t\t<input #inputValue\n\t\t\t\t\ttype='text'\n\t\t\t\t\tclass=\"amplify-form-input\"\n\t\t\t\t\tplaceholder=\"{{currentVoiceState}}\"\n\t\t\t\t\t[disabled]=\"!textEnabled\"\n\t\t\t\t\t*ngIf=\"!textEnabled\">\n\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t*ngIf=\"voiceEnabled\"\n\t\t\t\t\tng-style=\"{float: 'right'}\"\n\t\t\t\t\t(click)=\"micButtonHandler()\"\n\t\t\t\t\t[disabled]=\"micButtonDisabled\"\n\t\t\t\t>\n\t\t\t\t\t{{micText}}\n\t\t\t\t</button>\n\t\t\t\t<button\n\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t*ngIf=\"textEnabled\"\n\t\t\t\t\tng-style=\"{float: 'right'}\"\n\t\t\t\t\tclass=\"amplify-interactions-button\"\n\t\t\t\t\t[disabled]=\"inputDisabled\"\n\t\t\t\t\tng-click=\"!inputDisabled || onSubmit(inputValue.value)\"\n\t\t\t\t></button>\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</div>\n`;\ndeclare var LexAudio: any;\n\nconst STATES = {\n  INITIAL: { MESSAGE: 'Type your message or click  🎤', ICON: '🎤' },\n  LISTENING: { MESSAGE: 'Listening... click 🔴 again to cancel', ICON: '🔴' },\n  SENDING: { MESSAGE: 'Please wait...', ICON: '🔊' },\n  SPEAKING: { MESSAGE: 'Speaking...', ICON: '...' },\n};\n\nconst defaultVoiceConfig = {\n  silenceDetectionConfig: {\n    time: 2000,\n    amplitude: 0.2,\n  },\n};\n\n@Component({\n  selector: 'amplify-interactions-core',\n  template,\n})\nexport class ChatbotComponentCore implements OnInit {\n  errorMessage: string;\n  inputText: string = '';\n  botName: string;\n  chatTitle: string;\n  clearComplete: boolean = false;\n  messages: any = [];\n  completions: any = {};\n  currentVoiceState: string = STATES.INITIAL.MESSAGE;\n  inputDisabled: boolean = false;\n  micText: string = STATES.INITIAL.ICON;\n  voiceConfig: any = defaultVoiceConfig;\n  continueConversation: boolean = false;\n  micButtonDisabled: boolean = false;\n  audioInput: any;\n  lexResponse: any;\n  conversationModeOn: boolean = false;\n  ref: ChangeDetectorRef;\n  voiceEnabled: boolean = false;\n  textEnabled: boolean = true;\n  audioControl: any;\n  protected logger;\n\n  @Output()\n  complete: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(\n    ref: ChangeDetectorRef,\n    @Inject(AmplifyService) public amplifyService: AmplifyService\n  ) {\n    this.ref = ref;\n    this.continueConversation = false;\n    this.logger = this.amplifyService.logger('ChatbotComponent');\n  }\n\n  @Input()\n  set data(data: any) {\n    this.botName = data.bot;\n    this.chatTitle = data.title;\n    this.clearComplete = data.clearComplete;\n    this.conversationModeOn =\n      data.conversationModeOn === undefined ? false : data.conversationModeOn;\n    this.voiceEnabled =\n      data.voiceEnabled === undefined ? false : data.voiceEnabled;\n    this.textEnabled = data.textEnabled === undefined ? true : data.textEnabled;\n    this.voiceConfig = data.voiceConfig || this.voiceConfig;\n    this.performOnComplete = this.performOnComplete.bind(this);\n    this.amplifyService\n      .interactions()\n      .onComplete(this.botName, this.performOnComplete);\n\n    if (!this.textEnabled && this.voiceEnabled) {\n      this.currentVoiceState = 'Click the mic button';\n      STATES.INITIAL.MESSAGE = 'Click the mic button';\n    }\n\n    if (!this.voiceEnabled && this.textEnabled) {\n      this.currentVoiceState = 'Type a message';\n      STATES.INITIAL.MESSAGE = 'Type a message';\n    }\n\n    if (this.voiceEnabled) {\n      this.audioControl = new LexAudio.audioControl();\n    }\n  }\n\n  @Input()\n  set bot(botName: string) {\n    this.botName = botName;\n    this.performOnComplete = this.performOnComplete.bind(this);\n    this.amplifyService\n      .interactions()\n      .onComplete(botName, this.performOnComplete);\n  }\n\n  @Input()\n  set title(title: string) {\n    this.chatTitle = title;\n  }\n\n  @Input()\n  set clearOnComplete(clearComplete: boolean) {\n    this.clearComplete = clearComplete;\n  }\n\n  ngOnInit() {\n    if (!this.amplifyService.interactions()) {\n      throw new Error(\n        'Interactions module not registered on AmplifyService provider'\n      );\n    }\n  }\n\n  performOnComplete(evt) {\n    this.complete.emit(evt);\n    if (this.clearComplete) {\n      this.messages = [];\n    }\n  }\n\n  onInputChange(value: string) {\n    this.inputText = value;\n  }\n\n  onSubmit(e) {\n    if (!this.inputText) {\n      return;\n    }\n    const message = {\n      me: this.inputText,\n      meSentTime: new Date().toLocaleTimeString(),\n      bot: '',\n      botSentTime: '',\n    };\n    this.amplifyService\n      .interactions()\n      .send(this.botName, this.inputText)\n      .then((response: any) => {\n        this.inputText = '';\n        message.bot = response.message;\n        message.botSentTime = new Date().toLocaleTimeString();\n        this.messages.push(message);\n      })\n      .catch((error) => this.logger.error(error));\n  }\n\n  onSilenceHandler = () => {\n    if (!this.continueConversation) {\n      return;\n    }\n    this.audioControl.exportWAV((blob) => {\n      this.currentVoiceState = STATES.SENDING.MESSAGE;\n      this.audioInput = blob;\n      this.micText = STATES.SENDING.ICON;\n      this.micButtonDisabled = true;\n      this.lexResponseHandler();\n    });\n    this.ref.detectChanges();\n  };\n\n  reset() {\n    this.audioControl.clear();\n    this.inputText = '';\n    this.currentVoiceState = STATES.INITIAL.MESSAGE;\n    this.inputDisabled = false;\n    this.micText = STATES.INITIAL.ICON;\n    this.continueConversation = false;\n    this.micButtonDisabled = false;\n    this.ref.detectChanges();\n  }\n\n  onError(error) {\n    this.logger.error(error);\n  }\n\n  async lexResponseHandler() {\n    if (!this.continueConversation) {\n      return;\n    }\n\n    const interactionsMessage = {\n      content: this.audioInput,\n      options: {\n        messageType: 'voice',\n      },\n    };\n\n    const response = await this.amplifyService\n      .interactions()\n      .send(this.botName, interactionsMessage);\n\n    this.lexResponse = response;\n    this.currentVoiceState = STATES.SPEAKING.MESSAGE;\n    this.micText = STATES.SPEAKING.ICON;\n    this.micButtonDisabled = true;\n\n    const message = {\n      me: this.lexResponse.inputTranscript,\n      meSentTime: new Date().toLocaleTimeString(),\n      bot: '',\n      botSentTime: '',\n    };\n\n    this.inputText = '';\n    message.bot = this.lexResponse.message;\n    message.botSentTime = new Date().toLocaleTimeString();\n    this.messages.push(message);\n    this.doneSpeakingHandler();\n    this.ref.detectChanges();\n  }\n\n  doneSpeakingHandler() {\n    if (!this.continueConversation) {\n      return;\n    }\n    if (this.lexResponse.contentType === 'audio/mpeg') {\n      this.audioControl.play(this.lexResponse.audioStream, () => {\n        if (\n          this.lexResponse.dialogState === 'ReadyForFulfillment' ||\n          this.lexResponse.dialogState === 'Fulfilled' ||\n          this.lexResponse.dialogState === 'Failed' ||\n          !this.conversationModeOn\n        ) {\n          this.inputDisabled = false;\n          this.currentVoiceState = STATES.INITIAL.MESSAGE;\n          this.micText = STATES.INITIAL.ICON;\n          this.micButtonDisabled = false;\n          this.continueConversation = false;\n          this.ref.detectChanges();\n        } else {\n          this.currentVoiceState = STATES.LISTENING.MESSAGE;\n          this.micText = STATES.LISTENING.ICON;\n          this.micButtonDisabled = false;\n          this.audioControl.startRecording(\n            this.onSilenceHandler,\n            null,\n            this.voiceConfig.silenceDetectionConfig\n          );\n          this.ref.detectChanges();\n        }\n      });\n    } else {\n      this.inputDisabled = false;\n      this.currentVoiceState = STATES.INITIAL.MESSAGE;\n      this.micText = STATES.INITIAL.ICON;\n      this.micButtonDisabled = false;\n      this.continueConversation = false;\n      this.ref.detectChanges();\n    }\n  }\n\n  async micButtonHandler() {\n    if (this.continueConversation) {\n      this.reset();\n      this.ref.detectChanges();\n    } else {\n      this.inputDisabled = true;\n      this.continueConversation = true;\n      this.currentVoiceState = STATES.LISTENING.MESSAGE;\n      this.micText = STATES.LISTENING.ICON;\n      this.micButtonDisabled = false;\n      this.audioControl.startRecording(\n        this.onSilenceHandler,\n        null,\n        this.voiceConfig.silenceDetectionConfig\n      );\n      this.ref.detectChanges();\n    }\n  }\n}\n"]}