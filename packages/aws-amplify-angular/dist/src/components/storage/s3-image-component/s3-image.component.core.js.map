{"version":3,"file":"s3-image.component.core.js","sourceRoot":"","sources":["../../../../../src/components/storage/s3-image-component/s3-image.component.core.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAU,MAAM,eAAe,CAAC;AAC/E,OAAO,EAAE,cAAc,EAAE,MAAM,oCAAoC,CAAC;AAEpE,IAAM,QAAQ,GAAG,sGAMhB,CAAC;;IAeA,8BAAmB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;wBANjC,EAAE;wBAIe,IAAI,YAAY,EAAU;QAGzD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,kBAAkB,CAAC,CAAC;KAC9D;0BAGG,sCAAI;uBAAC,IAAS;YAChB,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;gBACd,OAAO;aACR;YACD,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC;YACvB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC;;;;;0BAI3B,sCAAI;uBAAC,IAAY;YACnB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;;;;;0BAIhB,yCAAO;uBAAC,OAAY;YACtB,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;;;;;IAG1B,uCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO;SACR;QACD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,EAAE,EAAE;YAClC,MAAM,IAAI,KAAK,CACb,0DAA0D,CAC3D,CAAC;SACH;QACD,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC1C;IAED,6CAAc,GAAd;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC9B;IAED,uCAAQ,GAAR,UAAS,IAAI,EAAE,OAAO;QAAtB,iBAMC;QALC,IAAI,CAAC,cAAc;aAChB,OAAO,EAAE;aACT,GAAG,CAAC,IAAI,EAAE,OAAO,CAAC;aAClB,IAAI,CAAC,UAAC,GAAG,IAAK,OAAA,CAAC,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC,EAAhB,CAAgB,CAAC;aAC/B,KAAK,CAAC,UAAC,CAAC,IAAK,OAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,EAAhB,CAAgB,CAAC,CAAC;KACnC;;gBA1DF,SAAS,SAAC;oBACT,QAAQ,EAAE,uBAAuB;oBACjC,QAAQ,UAAA;iBACT;;;;gBAbQ,cAAc;;;6BAoBpB,MAAM;yBAON,KAAK;yBASL,KAAK;4BAKL,KAAK;;+BAzDR;;SA8Ba,oBAAoB","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport { Component, Input, Output, EventEmitter, OnInit } from '@angular/core';\nimport { AmplifyService } from '../../../providers/amplify.service';\n\nconst template = `\n  <img\n    class=\"amplify-image\"\n    (click)=\"onImageClicked()\"\n    src=\"{{url}}\"\n  />\n`;\n\n@Component({\n  selector: 'amplify-s3-image-core',\n  template,\n})\nexport class S3ImageComponentCore implements OnInit {\n  url: any;\n  _path: string;\n  _options: any = {};\n  protected logger: any;\n\n  @Output()\n  selected: EventEmitter<string> = new EventEmitter<string>();\n\n  constructor(public amplifyService: AmplifyService) {\n    this.logger = this.amplifyService.logger('S3ImageComponent');\n  }\n\n  @Input()\n  set data(data: any) {\n    if (!data.path) {\n      return;\n    }\n    this._path = data.path;\n    this._options = data.options;\n  }\n\n  @Input()\n  set path(path: string) {\n    this._path = path;\n  }\n\n  @Input()\n  set options(options: any) {\n    this._options = options;\n  }\n\n  ngOnInit() {\n    if (!this._path) {\n      return;\n    }\n    if (!this.amplifyService.storage()) {\n      throw new Error(\n        'Storage module not registered on AmplifyService provider'\n      );\n    }\n    this.getImage(this._path, this._options);\n  }\n\n  onImageClicked() {\n    this.selected.emit(this.url);\n  }\n\n  getImage(path, options) {\n    this.amplifyService\n      .storage()\n      .get(path, options)\n      .then((url) => (this.url = url))\n      .catch((e) => console.error(e));\n  }\n}\n"]}