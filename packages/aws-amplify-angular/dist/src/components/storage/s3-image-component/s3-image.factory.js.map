{"version":3,"file":"s3-image.factory.js","sourceRoot":"","sources":["../../../../../src/components/storage/s3-image-component/s3-image.factory.ts"],"names":[],"mappings":";;;;;;;;;;;;;;AAeA,OAAO,EACL,SAAS,EACT,KAAK,EAEL,SAAS,EACT,wBAAwB,EAExB,MAAM,EACN,YAAY,GACb,MAAM,eAAe,CAAC;AACvB,OAAO,EAAE,yBAAyB,EAAE,MAAM,iDAAiD,CAAC;AAC5F,OAAO,EAAE,cAAc,EAAE,MAAM,uBAAuB,CAAC;AAEvD,OAAO,EAAE,qBAAqB,EAAE,MAAM,4BAA4B,CAAC;AACnE,OAAO,EAAE,oBAAoB,EAAE,MAAM,2BAA2B,CAAC;;IAmB/D,0BAAoB,wBAAkD;QAAlD,6BAAwB,GAAxB,wBAAwB,CAA0B;wBAJrC,IAAI,YAAY,EAAU;KAIe;IAE1E,mCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,EAAE,CAAC;KACtB;IAED,sCAAW,GAAX,eAAgB;IAEhB,wCAAa,GAAb;QAAA,iBA0BC;QAzBC,IAAM,cAAc,GAClB,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,KAAK,OAAO;YACxD,CAAC,CAAC,IAAI,cAAc,CAAC,qBAAqB,EAAE;gBACxC,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC;YACJ,CAAC,CAAC,IAAI,cAAc,CAAC,oBAAoB,EAAE;gBACvC,IAAI,EAAE,IAAI,CAAC,IAAI;gBACf,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC,CAAC;QAET,IAAM,gBAAgB,GACpB,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACnD,cAAc,CAAC,SAAS,CACzB,CAAC;QAEJ,IAAM,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC;QAC7D,gBAAgB,CAAC,KAAK,EAAE,CAAC;QAEzB,IAAM,YAAY,GAAG,gBAAgB,CAAC,eAAe,CAAC,gBAAgB,CAAC,CAAC;QACzD,YAAY,CAAC,QAAS,CAAC,IAAI,GAAG,cAAc,CAAC,IAAI,CAAC;QAEjE,YAAY,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAC,CAAC;YACzC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SACvB,CAAC,CAAC;KACJ;;gBAnDF,SAAS,SAAC;oBACT,QAAQ,EAAE,kBAAkB;oBAC5B,QAAQ,EAAE,+EAIT;iBACF;;;;gBAlBC,wBAAwB;;;8BAoBvB,KAAK;yBACL,KAAK;4BACL,KAAK;6BACL,MAAM;kCAEN,SAAS,SAAC,yBAAyB;;2BA7CtC;;SAuCa,gBAAgB","sourcesContent":["// tslint:disable\n/*\n * Copyright 2017-2018 Amazon.com, Inc. or its affiliates. All Rights Reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\"). You may not use this file except in compliance with\n * the License. A copy of the License is located at\n *\n *     http://aws.amazon.com/apache2.0/\n *\n * or in the \"license\" file accompanying this file. This file is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n * CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions\n * and limitations under the License.\n */\n// tslint:enable\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  ViewChild,\n  ComponentFactoryResolver,\n  OnDestroy,\n  Output,\n  EventEmitter,\n} from '@angular/core';\nimport { DynamicComponentDirective } from '../../../directives/dynamic.component.directive';\nimport { ComponentMount } from '../../component.mount';\nimport { S3ImageClass } from './s3-image.class';\nimport { S3ImageComponentIonic } from './s3-image.component.ionic';\nimport { S3ImageComponentCore } from './s3-image.component.core';\n\n@Component({\n  selector: 'amplify-s3-image',\n  template: `\n    <div>\n      <ng-template component-host></ng-template>\n    </div>\n  `,\n})\nexport class S3ImageComponent implements OnInit, OnDestroy {\n  @Input() framework: string;\n  @Input() path: string;\n  @Input() options: any;\n  @Output()\n  selected: EventEmitter<string> = new EventEmitter<string>();\n  @ViewChild(DynamicComponentDirective)\n  componentHost: DynamicComponentDirective;\n\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {}\n\n  ngOnInit() {\n    this.loadComponent();\n  }\n\n  ngOnDestroy() {}\n\n  loadComponent() {\n    const imageComponent =\n      this.framework && this.framework.toLowerCase() === 'ionic'\n        ? new ComponentMount(S3ImageComponentIonic, {\n            path: this.path,\n            options: this.options,\n          })\n        : new ComponentMount(S3ImageComponentCore, {\n            path: this.path,\n            options: this.options,\n          });\n\n    const componentFactory =\n      this.componentFactoryResolver.resolveComponentFactory(\n        imageComponent.component\n      );\n\n    const viewContainerRef = this.componentHost.viewContainerRef;\n    viewContainerRef.clear();\n\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    (<S3ImageClass>componentRef.instance).data = imageComponent.data;\n\n    componentRef.instance.selected.subscribe((e) => {\n      this.selected.emit(e);\n    });\n  }\n}\n"]}